# -- AtomiCloud Service Tree. See [ServiceTree](https://atomicloud.larksuite.com/wiki/OkfJwTXGFiMJkrk6W3RuwRrZs64?theme=DARK&contentTheme=DARK#MHw5d76uDo2tBLx86cduFQMRsBb)
serviceTree:
  platform: &platform sulfoxide
  service: &service iodine
  layer: &layer "1"


# -- Kubernetes labels and annotations, following Service Tree
tags: &tags
  atomi.cloud/platform: *platform
  atomi.cloud/service: *service
  atomi.cloud/layer: *layer

# -- Create SecretStore via secret of secrets pattern
sulfoxide-bromine:
  annotations:
    argocd.argoproj.io/sync-wave: "-5"
  # -- Store name to create
  storeName: doppler-iodine
  # -- Secret of Secrets reference
  rootSecret:
    # -- DOPPLER Token Reference
    ref: "SULFOXIDE_IODINE"

# -- Secret Annotations (External Secrets) to control synchronization
secretAnnotation:
  argocd.argoproj.io/sync-wave: "-3"

# -- Root Doppler token
auth:
  # -- external secret refresh interval
  refreshInterval: 1h
  # -- Secret store to reference
  secretStore:
    # -- name of the secret store to reference
    name: doppler
    # -- kind of the secret store to reference
    kind: ClusterSecretStore
  policy:
    # -- External Secret creation policy
    creation: Owner
    # -- External Secret deletion policy
    deletion: Retain
  # -- name of the secret to be created
  name: root-token
  # -- name of DOPPLER_TOKEN to be stored
  remoteName: PICHU_SULFOXIDE_SOS
  # -- upsync namespace
  upsyncNamespace: sulfoxide
  # -- secret key to store DOPPLER_TOKEN
  secretKey: DOPPLER_TOKEN

# -- Virtual Cluster Configuration. See [vcluster documentation](https://artifacthub.io/packages/helm/loft/vcluster)
vcluster:
  replicas: 1
  coredns:
    replicas: 1
    podAnnotations:
      <<: *tags
      atomi.cloud/module: coredns
    podLabels:
      <<: *tags
      atomi.cloud/module: coredns
    resources:
      requests:
        cpu: 125m
        memory: 128Mi
      limits:
        cpu: 500m
        memory: 512Mi
  etcd:
    storage:
      persistence: false
    resources:
      requests:
        cpu: 250m
        memory: 256Mi
      limits:
        cpu: 1000m
        memory: 1Gi
    labels:
      <<: *tags
      atomi.cloud/module: etcd
    annotations:
      <<: *tags
      atomi.cloud/module: etcd
    podAnnotations:
      <<: *tags
      atomi.cloud/module: etcd
    podLabels:
      <<: *tags
      atomi.cloud/module: etcd
    topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
        labelSelector:
          matchLabels:
            <<: *tags
            atomi.cloud/module: etcd
  mapServices:
    fromHost:
      - from: sulfoxide/entei-silicon-otlp-collector
        to: sulfoxide/silicon-otlp-collector
  sync:
    configmaps:
      all: true
    secrets:
      all: true
    ingresses:
      enabled: true
    pods:
      enabled: true
      ephemeralContainers: true
      status: true
    nodes:
      enabled: true
      fakeKubeletIPs: true
      enableScheduler: false
      syncNodeChanges: true
      syncAllNodes: true
  proxy:
    metricsServer:
      nodes:
        enabled: false
      pods:
        enabled: false

  syncer:
    resources:
      requests:
        cpu: 250m
        memory: 512Mi
      limits:
        cpu: 1000m
        memory: 1Gi
    annotations:
      <<: *tags
      atomi.cloud/module: syncer
    labels:
      <<: *tags
      atomi.cloud/module: syncer
    podAnnotations:
      <<: *tags
      atomi.cloud/module: syncer
    podLabels:
      <<: *tags
      atomi.cloud/module: syncer
    topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
        labelSelector:
          matchLabels:
            <<: *tags
            atomi.cloud/module: syncer
    extraArgs:
      - --tls-san=https://kubernetes.atomi.cloud
  ingress:
    enabled: true
    ingressClassName: nginx
    host: kubernetes.atomi.cloud
  telemetry:
    disabled: true
  plugin:
    secret-syncer:
      image: ghcr.io/kirinnee/vcluster-secret-syncer/secret-syncer:1.1.0
      imagePullPolicy: IfNotPresent
      resources:
        requests:
          cpu: 31m
          memory: 32Mi
        limits:
          cpu: 125m
          memory: 128Mi
  init:
    manifests: |
      apiVersion: v1
      kind: Namespace
      metadata:
        labels:
          kubernetes.io/metadata.name: sulfoxide
        name: sulfoxide

# -- ETCD Cluster configuration. See [etcd documentation](https://artifacthub.io/packages/helm/bitnami/etcd)
etcd:
  removeMemberOnContainerTermination: false
  auth:
    rbac:
      create: false
    token:
      enabled: false
    client:
      enableAuthentication: false
    peer:
      enableAuthentication: false
  commonLabels:
    <<: *tags
    atomi.cloud/module: etcd
  podLabels:
    <<: *tags
    atomi.cloud/module: etcd
  commonAnnotations:
    <<: *tags
    atomi.cloud/module: etcd
  podAnnotations:
    <<: *tags
    atomi.cloud/module: etcd
  topologySpreadConstraints:
    - maxSkew: 1
      topologyKey: topology.kubernetes.io/zone
      whenUnsatisfiable: ScheduleAnyway
      labelSelector:
        matchLabels:
          <<: *tags
          atomi.cloud/module: etcd
  persistence:
    enabled: false
  replicaCount: 3


