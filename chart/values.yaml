# -- AtomiCloud Service Tree. See [ServiceTree](https://atomicloud.larksuite.com/wiki/OkfJwTXGFiMJkrk6W3RuwRrZs64?theme=DARK&contentTheme=DARK#MHw5d76uDo2tBLx86cduFQMRsBb)
serviceTree:
  platform: &platform sulfoxide
  service: &service iodine
  layer: &layer '1'

# -- Kubernetes labels and annotations, following Service Tree
tags: &tags
  atomi.cloud/platform: *platform
  atomi.cloud/service: *service
  atomi.cloud/layer: *layer

# -- Secret Annotations (External Secrets) to control synchronization
secretAnnotation:
  argocd.argoproj.io/sync-wave: '-3'

# -- Root Infisical token
auth:
  # -- external secret refresh interval
  refreshInterval: 1m
  # -- Secret store to reference
  secretStore:
    # -- name of the secret store to reference
    name: infisical
    # -- kind of the secret store to reference
    kind: ClusterSecretStore
  policy:
    # -- External Secret creation policy
    creation: Owner
    # -- External Secret deletion policy
    deletion: Retain
  # -- name of the secret to be created
  name: root-token
  # -- Upsync secret of secrets reference for client ID
  clientId:
    # -- remote reference of the CLIENT_ID in the secret of secrets store
    remoteName: PICHU_SULFOXIDE_SOS_CLIENT_ID
    # -- secret key to store CLIENT_ID
    secretKey: CLIENT_ID
  # -- Upsync secret of secrets reference for client secret
  clientSecret:
    # -- remote reference of the CLIENT_SECRET in the secret of secrets store
    remoteName: PICHU_SULFOXIDE_SOS_CLIENT_SECRET
    # -- secret key to store CLIENT_SECRET
    secretKey: CLIENT_SECRET

  # -- upsync namespace
  upsyncNamespace: sulfoxide

# -- Virtual Cluster Configuration. See [vcluster documentation](https://artifacthub.io/packages/helm/loft/vcluster)
vcluster:
  controlPlane:
    backingStore:
      etcd:
        deploy:
          enabled: true
          statefulSet:
            pods:
              annotations:
                <<: *tags
                atomi.cloud/module: etcd
                drop_log: 'true'
              labels:
                <<: *tags
                atomi.cloud/module: etcd
                drop_log: 'true'
            annotations:
              <<: *tags
              atomi.cloud/module: etcd
              drop_log: 'true'
            labels:
              <<: *tags
              atomi.cloud/module: etcd
            persistence:
              volumeClaim:
                enabled: false
            resources:
              limits:
                cpu: 1000m
                memory: 1.5Gi
              requests:
                cpu: 500m
                memory: 512Mi
            scheduling:
              affinity:
                podAntiAffinity:
                  preferredDuringSchedulingIgnoredDuringExecution: []
              topologySpreadConstraints:
                - maxSkew: 1
                  topologyKey: topology.kubernetes.io/zone
                  whenUnsatisfiable: ScheduleAnyway
                  labelSelector:
                    matchLabels:
                      <<: *tags
                      atomi.cloud/module: etcd
    coredns:
      enabled: true
      deployment:
        replicas: 1
        labels:
          <<: *tags
          atomi.cloud/module: coredns
          drop_log: 'true'
        annotations:
          <<: *tags
          atomi.cloud/module: coredns
          drop_log: 'true'
        pods:
          annotations:
            <<: *tags
            atomi.cloud/module: coredns
            drop_log: 'true'
          labels:
            <<: *tags
            atomi.cloud/module: coredns
    distro:
      k8s:
        enabled: true
    ingress:
      enabled: true
      host: kubernetes.atomi.cloud
      spec:
        ingressClassName: nginx
    proxy:
      extraSANs:
        - https://kubernetes.atomi.cloud
    statefulSet:
      pods:
        labels:
          <<: *tags
          atomi.cloud/module: syncer
        annotations:
          <<: *tags
          atomi.cloud/module: syncer
      labels:
        <<: *tags
        atomi.cloud/module: syncer
      annotations:
        <<: *tags
        atomi.cloud/module: syncer
      resources:
        limits:
          cpu: 1000m
          memory: 2Gi
          ephemeral-storage: 8Gi
        requests:
          ephemeral-storage: 400Mi
          cpu: 200m
          memory: 256Mi
      highAvailability:
        replicas: 1
      scheduling:
        podManagementPolicy: OrderedReady
  experimental:
    deploy:
      vcluster:
        manifests: |
          apiVersion: v1
          kind: Namespace
          metadata:
            labels:
              kubernetes.io/metadata.name: sulfoxide
            name: sulfoxide
  integrations:
    metricsServer:
      enabled: true
      nodes: false
      pods: false
  networking:
    replicateServices:
      fromHost:
        - from: sulfoxide/entei-silicon-otlp-collector
          to: sulfoxide/silicon-otlp-collector
  plugin:
    secret-syncer:
      image: ghcr.io/kirinnee/vcluster-secret-syncer/secret-syncer:1.1.0
      imagePullPolicy: IfNotPresent
      resources:
        limits:
          cpu: 125m
          memory: 128Mi
        requests:
          cpu: 31m
          memory: 32Mi
  sync:
    fromHost:
      ingressClasses:
        enabled: true
      nodes:
        enabled: true
        selector:
          all: true
        syncBackChanges: true
    toHost:
      configMaps:
        all: true
      ingresses:
        enabled: true
      secrets:
        all: true
  telemetry:
    enabled: false
