# -- AtomiCloud Service Tree. See [ServiceTree](https://atomicloud.larksuite.com/wiki/OkfJwTXGFiMJkrk6W3RuwRrZs64?theme=DARK&contentTheme=DARK#MHw5d76uDo2tBLx86cduFQMRsBb)
serviceTree:
  platform: &platform sulfoxide
  service: &service iodine
  module: &module apiserver
  layer: &layer "1"


# -- Kubernetes labels and annotations, following Service Tree
tags: &tags
  atomi.cloud/platform: *platform
  atomi.cloud/service: *service
  atomi.cloud/layer: *layer
  atomi.cloud/module: *module

# -- Create SecretStore via secret of secrets pattern
sulfoxide-bromine:
  # -- Store name to create
  storeName: doppler-iodine
  # -- Secret of Secrets reference
  rootSecret:
    # -- DOPPLER Token Reference
    ref: "SULFOXIDE_IODINE"

# -- Root Doppler token
auth:
  # -- external secret refresh interval
  refreshInterval: 1h
  # -- Secret store to reference
  secretStore:
    # -- name of the secret store to reference
    name: doppler
    # -- kind of the secret store to reference
    kind: ClusterSecretStore
  policy:
    # -- External Secret creation policy
    creation: Owner
    # -- External Secret deletion policy
    deletion: Retain
  # -- name of the secret to be created
  name: root-token
  # -- name of DOPPLER_TOKEN to be stored
  remoteName: PICHU_SULFOXIDE_SOS
  # -- upsync namespace
  upsyncNamespace: sulfoxide
  # -- secret key to store DOPPLER_TOKEN
  secretKey: DOPPLER_TOKEN

# -- K3S state (postgresql) auth
datastore:
  # -- external secret refresh interval
  refreshInterval: 1h
  # -- Secret store to reference
  secretStore:
    # -- name of the secret store to reference
    name: doppler-iodine
    # -- kind of the secret store to reference
    kind: SecretStore
  policy:
    # -- External Secret creation policy
    creation: Owner
    # -- External Secret deletion policy
    deletion: Retain
  # -- name of the secret to be created
  name: datastore-endpoint
  # -- name of the remote secret name
  remoteName: PICHU_K3S_DATASTORE_ENDPOINT
  # -- secret key to store the connection string secret
  secretKey: K3S_DATASTORE_ENDPOINT

# -- K3S sync token
k3sSyncToken:
  # -- external secret refresh interval
  refreshInterval: 1h
  # -- Secret store to reference
  secretStore:
    # -- name of the secret store to reference
    name: doppler-iodine
    # -- kind of the secret store to reference
    kind: SecretStore
  policy:
    # -- External Secret creation policy
    creation: Owner
    # -- External Secret deletion policy
    deletion: Retain
  # -- name of the secret to be created
  name: k3s-sync-token
  # -- name of the remote secret name
  remoteName: PIKACHU_K3S_TOKEN
  # -- secret key to store the connection string secret
  secretKey: K3S_TOKEN

# -- Virtual Cluster Configuration. See [vcluster documentation](https://artifacthub.io/packages/helm/loft/vcluster)
vcluster:
  enableHA: true
  replicas: 3
  coredns:
    replicas: 3
  storage:
    persistence: false
  serverToken:
    secretKeyRef:
      name: k3s-sync-token
      key: K3S_TOKEN
  mapServices:
    fromHost:
      - from: sulfoxide/entei-silicon-otlp-collector
        to: sulfoxide/entei-silicon-otlp-collector
  vcluster:
    env:
      - name: K3S_DATASTORE_ENDPOINT
        valueFrom:
          secretKeyRef:
            name: datastore-endpoint
            key: K3S_DATASTORE_ENDPOINT
  podLabels:
    <<: *tags
  podAnnotations:
    <<: *tags
  labels:
    <<: *tags
  annotations:
    <<: *tags
  sync:
    configmaps:
      all: true
    secrets:
      all: true
    ingresses:
      enabled: true
    pods:
      enabled: true
      ephemeralContainers: true
      status: true
    nodes:
      enabled: true
      fakeKubeletIPs: true
      enableScheduler: true
      syncNodeChanges: true
      syncAllNodes: true
  proxy:
    metricsServer:
      nodes:
        enabled: false
      pods:
        enabled: false
  syncer:
    extraArgs:
      - --tls-san=https://kubernetes.atomi.cloud
  ingress:
    enabled: true
    ingressClassName: nginx
    host: kubernetes.atomi.cloud
  telemetry:
    disabled: true
  plugin:
    secret-syncer:
      image: ghcr.io/kirinnee/vcluster-secret-syncer/secret-syncer-amd:1.0.0
      imagePullPolicy: IfNotPresent
  init:
    manifests: |
      apiVersion: v1
      kind: Namespace
      metadata:
        labels:
          kubernetes.io/metadata.name: sulfoxide
        name: sulfoxide
      ---
      apiVersion: v1
      kind: ConfigMap
      metadata:
        name: coredns-custom
        namespace: kube-system
      data:
        nodehost.server: |
          node.com:1053 {
            log
            reload
            rewrite name regex (.*)\.node\.com {1}.nodes.vcluster.com
            forward . 127.0.0.1:1054
          }
          .:1054 {
            log
            reload
            hosts /etc/coredns/NodeHosts {
              ttl 60
              reload 15s
              fallthrough
            }
          }


